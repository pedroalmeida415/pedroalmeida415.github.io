{"version":3,"sources":["../../node_modules/sass-mq/_mq.scss","99-utilities/_visibility.scss","03-generic/_selection.scss","04-elements/_html.scss","06-components/_container.scss","02-tools/_placeholder.scss","06-components/_display.scss","01-settings/_colors.scss","02-tools/_hidden.scss","06-components/_header.scss","06-components/_nav.scss","06-components/_mobileMenu.scss","06-components/_potions.scss","06-components/_footer.scss","06-components/_lightbox.scss","02-tools/_clearfix.scss"],"names":[],"mappings":"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","file":"main.63235504.chunk.css","sourcesContent":["@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and â€¦`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size != 16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if ($base-font-size != 16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, printâ€¦\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} â‰¥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","/* ==========================================================================\n   #VISIBILITY\n   ========================================================================== */\n\n.u-hidden-visually {\n  @include hidden-visually;\n}\n\n/**\n * Hide visually and from screen readers.\n */\n\n.u-hidden {\n  display: none !important;\n}\n\n@each $name, $value in $breakpoints {\n  .u-hiddenâ€“#{$name} {\n    @include mq($from: $name) {\n      display: none !important;\n    }\n  }\n}\n","*,\n*:before,\n*:after  {\n  -webkit-box-sizing: inherit;\n  -moz-box-sizing: inherit;\n  box-sizing: inherit;\n}","html {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n}\n\nheader {\n  height: 10em;\n  @include mq($until: mobile) {\n    height: unset;\n    h1 {\n      margin: 0px;\n    }\n}\n}\n\nnav {\n  max-height: 5em;\n}\n\nfooter {\n  min-height: 22em;\n  @include mq($until: mobile) {\n    min-height: 5em;\n}\n}\n\ninput {\n  height: 3em;\n  width: 18em;\n}\n\nimg {\n  height: 250px;\n  width: auto;\n  @include mq($until: mobile) {\n    height: 130px;\n    width: auto;\n  }\n}\n\np {\n  margin: 0;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n","/* ==========================================================================\n   #CONTAINER-OBJECT\n   ========================================================================== */\n\n.header-container {\n  padding: 10px 50px;\n  @include mq($until: mobile) {\n    padding: 15px 10px;\n}\n}\n\n.nav-container {\n  padding: 12px 50px;\n  @include mq($until: mobile) {\n    padding: 8px 0px;\n  }\n}\n\n.footer-container {\n  padding: 35px 40px;\n  @include mq($until: mobile) {\n   padding: 5px;\n}  \n}\n\n.potions-container {\n  padding: 65px 60px;\n  width: 100vw;\n  align-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  @include mq($until: mobile) {\n    width: 100%;\n    padding: 20px 0px;\n    margin: 0px;\n    text-align: center;\n    font-size: 1.8em;\n}\n}\n","///* ========================================================================\n//   #PLACEHOLDERS\n//   ======================================================================== */\n\n@mixin placeholder-color($color: #b3b2b2) {\n  ::-webkit-input-placeholder {\n    color: $color;\n  }\n  :-moz-placeholder {\n    color: $color;\n  }\n  ::-moz-placeholder {\n    color: $color;\n  }\n  :-ms-input-placeholder {\n    color: $color;\n  }\n  ::-ms-input-placeholder {\n    color: $color;\n  }\n  ::placeholder {\n    color: $color;\n  }\n}\n","@include placeholder-color;\r\n\r\n// ------------- FONTS STYLE --------------\\/\r\n.fontFamily-TNR {\r\n    font-family: 'Times New Roman', Times, serif;\r\n}\r\n\r\n.fontHeight-small {\r\n    line-height: 0.8em;\r\n}\r\n\r\n.fontSize-merlin {\r\n    font-size: 2em;\r\n    @include mq($until: mobile) {\r\n        font-size: 1.4em;\r\n    }\r\n    \r\n}\r\n\r\n.fontSize-big {\r\n    font-size: 1.4em;\r\n    @include mq($until: mobile) {\r\n        font-size: 0.8em;\r\n    }\r\n}\r\n\r\n.fontSize-small {\r\n    font-size: 0.75em;\r\n}\r\n\r\n.fontStyle-italic {\r\n    font-style: italic;\r\n}\r\n\r\n.red-text {\r\n    color: $color-red\r\n}\r\n\r\n.lightGray-text {\r\n    color: $color-transparent;\r\n}\r\n\r\n.fontweight-bold {\r\n    font-weight: 700;\r\n}\r\n\r\n.fontweigth-thin {\r\n    font-weight: 300;\r\n}\r\n\r\n.pointer {\r\n    cursor: pointer;\r\n}\r\n\r\n.mobile-hidden {\r\n    @include mq($until: mobile) {\r\n        @include hidden-visually\r\n    }\r\n}\r\n\r\n.laptop-hidden {\r\n    @include mq($from: mobile) {\r\n        @include hidden-visually\r\n    }\r\n}","/* ==========================================================================\r\n   #COLOR-VARIABLES\r\n   ========================================================================== */\r\n\r\n\r\n// Colors\r\n$color-brand: #207cdf;\r\n$color-white: #ffffff;\r\n$color-text:  #686868;\r\n$color-red: #e73939;\r\n$color-purple: #523466;\r\n$color-purple-dark: rgb(65, 40, 83);\r\n$color-white: #FFF;\r\n$color-dark: #000;\r\n$color-grey: #e6e6e6;\r\n$color-transparent: #b3b2b2;\r\n\r\n\r\n// Background Colors\r\n$bg-color-gray: #e6e6e6;\r\n$bg-color-purple: #523466;\r\n$bg-color: #FFF;\r\n\r\n\r\n// Border\r\n$color-border: #353535;\r\n\r\n\r\n// Links\r\n$color-link:        $color-text;\r\n$color-link-hover:  $color-brand;","///* ========================================================================\n//   #HIDDEN-VISUALLY\n//   ======================================================================== */\n\n// Mixin to quickly apply accessible hiding to elements.\n@mixin hidden-visually() {\n  border: 0 !important;\n  clip: rect(0 0 0 0) !important;\n  clip-path: inset(50%) !important;\n  height: 1px !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  white-space: nowrap !important;\n  width: 1px !important;\n}\n",".header-display {\r\n    display: flex;\r\n    flex-direction: row;\r\n    background: $bg-color;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    .input-header {\r\n        background-image: url(http://www.clker.com/cliparts/D/k/0/U/i/k/search-icon-red-md.png);\r\n        background-repeat: no-repeat;\r\n        background-size: 20px 20px;\r\n        background-position: 10px 14px;\r\n        padding-left: 40px;\r\n    }\r\n    img {\r\n        width: 50px;\r\n        height: auto;\r\n    }\r\n    i {\r\n        font-size: 25px;\r\n        color: $bg-color-purple;\r\n    }\r\n    @include mq($until: mobile) {\r\n        margin-right: auto;\r\n        margin-left: auto;\r\n        padding: 10px 8px;\r\n        .cauldron-bag {\r\n            display: flex;\r\n            flex-flow: column;\r\n            text-align: center;\r\n        }\r\n        img {\r\n            width: 40px;\r\n            height: auto;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n.input-display {\r\n    border-radius: 5px;\r\n    border: 1px solid $color-border;\r\n    color: $color-dark;\r\n    outline: none;\r\n}\r\n\r\n.cauldron-bag {\r\n    display: flex;\r\n    flex-flow: row;\r\n    align-items: center;\r\n}\r\n\r\n.purple-text {\r\n    color: rgb(101, 70, 151);\r\n    font-size: 0.60em;\r\n    font-family: 'Bad Script', cursive;\r\n    position: relative;\r\n    &::before {\r\n    content: \"\";\r\n    border: 1px solid $color-transparent;\r\n    position: absolute;\r\n    width: 25%;\r\n    top: 16px;\r\n    left: -55px;\r\n}   &::after {\r\n    content: \"\";\r\n    border: 1px solid $color-transparent;\r\n    width: 25%;\r\n    position: absolute;\r\n    top: 16px;\r\n    right: -55px;\r\n    }\r\n    @include mq($until: mobile) {\r\n    &::before {\r\n    content: \"\";\r\n    border: 1px solid $color-transparent;\r\n    position: absolute;\r\n    width: 25%;\r\n    top: 10px;\r\n    left: -35px;\r\n}   &::after {\r\n    content: \"\";\r\n    border: 1px solid $color-transparent;\r\n    width: 25%;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: -35px;\r\n    }    \r\n}\r\n}",".nav-display {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: $bg-color-purple;\r\n    color: #FFF;\r\n    font-style: italic;\r\n    font-size: 1em;\r\n    font-family: 'Times New Roman', Times, serif;\r\n    i {\r\n        padding-left: 10px;\r\n    } \r\n    button {\r\n    font-size: unset;  \r\n    font-style: inherit;\r\n    border: none;\r\n    outline: none;\r\n    color: white;\r\n    padding: 22px 18px;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    margin: 0;\r\n  }@include mq($until: mobile) {\r\n    background-color: $color-grey;\r\n    color: $color-text;\r\n    width: 100vw;\r\n    padding: 5px 0px;\r\n    span {\r\n        position: relative;\r\n        font-size: 0.7em;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n}\r\n  \r\n}\r\n.nav-items{\r\n    flex-grow: 2;\r\n    flex-wrap: nowrap;\r\n    overflow: hidden;\r\n    .relative {\r\n        position: relative;\r\n    }\r\n    button {\r\n        border-radius: 7px;\r\n    }\r\n    button:hover {\r\n        background-color: #422a53;\r\n    }\r\n}\r\n.nav-user {\r\n    flex-grow: 1;\r\n    a {\r\n        padding: 22px;\r\n    }\r\n    a:hover {\r\n        border-radius: 7px;\r\n        background-color: #422a53; \r\n    }\r\n}\r\n\r\n//--------------DROPDOWN MENU------------\\/\r\n.dropdown-content {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: #f9f9f9;\r\n    min-width: 160px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.8);\r\n    z-index: 1;\r\n}\r\n\r\n.dropdown-content p {\r\n    color: black;\r\n    padding: 12px 16px;\r\n    display: block;\r\n    text-align: left;\r\n}\r\n\r\n.dropdown-content p:hover {\r\n    background-color: #c4c4c4;\r\n}\r\n\r\n.dropbtn:hover .dropdown-content {\r\n    display: block;\r\n}\r\n\r\n#hover-fixed {\r\n    background-color: #422a53;\r\n}\r\n//-------------DROPDOWN MENU-------------/\\",".sidenav {\r\n    height: 100%;\r\n    width: 0;\r\n    position: fixed;\r\n    z-index: 2; \r\n    top: 0;\r\n    left: 0;\r\n    background-color: #fff;\r\n    overflow-x: hidden; \r\n    transition: 0.5s;\r\n}\r\n\r\n.sidenav a{\r\n    padding: 8px 8px 8px 32px;\r\n    text-decoration: none;\r\n    font-size: 15px;\r\n    color: #fff;\r\n    display: block;\r\n    &:not(:first-child) {\r\n        background-color: $bg-color-purple;\r\n        transition: 0.3s;\r\n    }\r\n}\r\n\r\n.sidenav a:hover:not(:first-child) {\r\n    background-color: #422a53;\r\n}\r\n\r\n.sidenav .closebtn {\r\n    color: #422a53;\r\n    padding: 5px 5px;\r\n    font-size: 30px;\r\n    cursor: pointer;\r\n}\r\n\r\n.user-mobile {\r\n    text-align: center;\r\n    padding: 10px 0px;\r\n    background-color: $bg-color-purple;\r\n    display: flex;\r\n    flex-flow: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    a {\r\n        padding: 8px;\r\n    }\r\n    a:hover {\r\n        background-color: #422a53;\r\n    }\r\n}\r\n\r\n.menu-header {\r\n    display: flex;\r\n    flex-flow: row;\r\n    justify-content: space-evenly;\r\n    padding: 15px 5px;\r\n    align-items: center;\r\n    input {\r\n        width: 70%;\r\n    }\r\n}\r\n\r\n.input-header {\r\n    background-image: url(http://www.clker.com/cliparts/D/k/0/U/i/k/search-icon-red-md.png);\r\n    background-repeat: no-repeat;\r\n    background-size: 20px 20px;\r\n    background-position: 10px 14px;\r\n    padding-left: 40px;\r\n}",".potions-display {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    font-size: 0.6em;\r\n    max-width: 1132px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    @include mq($until: mobile) {\r\n        width: 100vw;\r\n        font-size: 0.35em;\r\n        justify-content: space-around;\r\n    }\r\n}\r\n\r\n.Potion {\r\n    padding: 50px 20px;\r\n    cursor: pointer;\r\n    @include mq($until: mobile) {\r\n        padding: 20px 10px;\r\n    }\r\n}",".footer-display {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    background-color: $bg-color-gray;\r\n    justify-content: space-between;\r\n    .utility-links {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 400px;\r\n        & p {\r\n            margin-top: 10px;\r\n            margin-right: 15px;\r\n        }\r\n    }\r\n    .icons {\r\n        color: $bg-color-purple;\r\n        font-size: 35px;\r\n        justify-content: space-between;\r\n        padding: 25px 0px;\r\n        & i {\r\n            margin-right: 50px;\r\n        }\r\n        @include mq($until: mobile) {\r\n            font-size: 25px;\r\n            text-align: center;\r\n            padding: 15px 0px;\r\n            width: 100%;\r\n            i{\r\n                margin: 0px 14px;\r\n            }\r\n        }\r\n    }\r\n    .copyright {\r\n        padding-top: 30px;\r\n        color: $color-text;\r\n        font-size: 1.3em;\r\n        @include mq($until: mobile) {\r\n            font-size: 1em;\r\n            padding: 5px 0px 30px 0px;\r\n        }\r\n    }\r\n    .newsletter {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        padding: 35px 30px;\r\n        background-color: #FFF;\r\n        border-radius: 7px;\r\n        width: 450px;\r\n        height: 200px;\r\n        @include mq($until: mobile) {\r\n            width: 100vw;\r\n            height: auto;\r\n            margin: 10px;\r\n            padding: 20px 10px;\r\n            border-radius: 0px;\r\n            font-size: 0.6em;\r\n            display: block;\r\n        }\r\n        .submit{\r\n            @include mq($until: mobile) {\r\n                display: flex;\r\n                flex-flow: row;\r\n                margin-top: 10px;\r\n            }\r\n        }\r\n        button {\r\n            font-size: unset;  \r\n            font-style: inherit;\r\n            font-size: 1.1em;\r\n            border: none;\r\n            color: white;\r\n            background-color: $color-red;\r\n            font-family: inherit;\r\n            margin: 0;\r\n            border-radius: 7px;\r\n            height: 48px;\r\n            width: 90px;\r\n            text-align: center;\r\n            @include mq($until: mobile) {\r\n                width: 20vw;\r\n                height: 25px;\r\n                font-size: 1em;\r\n                border-radius: 4px;\r\n            }\r\n        }\r\n        input {\r\n            padding-left: 10px;\r\n            margin-right: 10px;\r\n            @include mq($until: mobile) {\r\n                width: 60vw;\r\n                height: 25px;\r\n            }            \r\n        }\r\n        p {\r\n            font-size: 1.1em;\r\n            @include mq($until: mobile) {\r\n                display: block;\r\n                margin: 5px 0px;\r\n            }\r\n        }\r\n        @include mq($until: mobile) {\r\n            width: 100vw;\r\n        }\r\n    }\r\n    @include mq($until: mobile) {\r\n        flex-wrap: wrap-reverse;\r\n    }\r\n}",".black_overlay{\r\n    display: none;\r\n    position: fixed;\r\n    top: 0%;\r\n    left: 0%;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: black;\r\n    z-index:1001;\r\n    -moz-opacity: 0.8;\r\n    opacity:.80;\r\n    filter: alpha(opacity=80);\r\n}\r\n.white_content {\r\n    display: none;\r\n    position: fixed;\r\n    top: 10%;\r\n    left: 15%;\r\n    width: 70%;\r\n    height: 80%;\r\n    padding: 50px;\r\n    border: 1px solid black;\r\n    background-color: white;\r\n    z-index:1002;\r\n    overflow: auto;\r\n    @if $display {\r\n        flex-flow: row\r\n    }\r\n    button {\r\n        position: absolute;\r\n        top: 1%;\r\n        right: 1%;\r\n        font-size: 20px;  \r\n        font-style: inherit;\r\n        border: none;\r\n        outline: none;\r\n        color: black;\r\n        padding: 10px;\r\n        background-color: inherit;\r\n        font-family: inherit;\r\n        margin: 0;\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n.details {\r\n    flex-flow: column\r\n}\r\n","///* ========================================================================\n//   #CLEARFIX\n//   ======================================================================== */\n\n@mixin clearfix() {\n  &:after {\n    content: '' !important;\n    display: block !important;\n    clear: both !important;\n  }\n}\n"]}